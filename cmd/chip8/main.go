package main

import (
	"log"
	"os"

	tea "github.com/charmbracelet/bubbletea"
	"github.com/smelton01/chip8/chip8"
)

const (
	Rows       = 32
	Cols       = 64
	MemorySize = 4096
	path       = "./assets/roms/Pong.ch8"
)

var Font = [][]byte{{0xF0, 0x90, 0x90, 0x90, 0xF0},
	{0x20, 0x60, 0x20, 0x20, 0x70},
	{0xF0, 0x10, 0xF0, 0x80, 0xF0},
	{0xF0, 0x10, 0xF0, 0x10, 0xF0},
	{0x90, 0x90, 0xF0, 0x10, 0x10},
	{0xF0, 0x80, 0xF0, 0x10, 0xF0},
	{0xF0, 0x80, 0xF0, 0x90, 0xF0},
	{0xF0, 0x10, 0x20, 0x40, 0x40},
	{0xF0, 0x90, 0xF0, 0x90, 0xF0},
	{0xF0, 0x90, 0xF0, 0x10, 0xF0},
	{0xF0, 0x90, 0xF0, 0x90, 0x90},
	{0xE0, 0x90, 0xE0, 0x90, 0xE0},
	{0xF0, 0x80, 0x80, 0x80, 0xF0},
	{0xE0, 0x90, 0x90, 0x90, 0xE0},
	{0xF0, 0x80, 0xF0, 0x80, 0xF0},
	{0xF0, 0x80, 0xF0, 0x80, 0x80},
}

func main() {
	display := chip8.Display{Rows: Rows, Cols: Cols, FPS: 30, Grid: make([]byte, Rows*Cols)}

	take := make(chan uint16)
	machine := chip8.CPU{
		Memory:      make([]byte, MemorySize),
		Stack:       chip8.NewStack(),
		Frequency:   700,
		PC:          0x200,
		Registers:   make([]byte, 16),
		Font:        Font,
		Display:     display,
		Key:         make(chan string),
		Take:        take,
		PressedKeys: chip8.NewKeys(),
	}
	model := chip8.Model{Chip8: &machine}

	rom, err := os.ReadFile(path)
	if err != nil {
		panic(err)
	}
	machine.LoadRom(rom)
	machine.LoadFont()
	go machine.StartTimers()
	go machine.Cycle()
	go machine.ListenForKeys(take)

	p := tea.NewProgram(model)
	if err := p.Start(); err != nil {
		log.Fatal(err)
	}
}
